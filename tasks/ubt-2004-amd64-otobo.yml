---
# Title: OTOBO Ticket system
#
# Authtor: bitfinity-nl
# File: tasks/ubt-2004-amd64-otobo.yml
#
# Description:
#   OTOBO is the new free Open Source ticket system 
#   with strong functionality AND a great look.

- name: "Install packages"
  apt:
    name: "{{ packages }}"
    state: present
  vars:
    packages:
    - unzip
    - apache2 
    - libapache2-mod-perl2
    # Additional Perl modules
    - libdatetime-perl
    - libcrypt-eksblowfish-perl 
    - libcrypt-ssleay-perl
    - libgd-graph-perl
    - libapache-dbi-perl
    - libsoap-lite-perl 
    - libarchive-zip-perl 
    - libgd-text-perl 
    - libnet-dns-perl 
    - libpdf-api2-perl
    - libauthen-ntlm-perl 
    - libdbd-odbc-perl 
    - libjson-xs-perl
    - libyaml-libyaml-perl 
    - libxml-libxml-perl 
    - libencode-hanextra-perl 
    - libxml-libxslt-perl 
    - libpdf-api2-simple-perl 
    - libmail-imapclient-perl 
    - libtemplate-perl 
    - libtext-csv-xs-perl 
    - libdbd-pg-perl
    - libapache2-mod-perl2
    - libtemplate-perl
    - libnet-dns-perl 
    - libnet-ldap-perl 
    - libio-socket-ssl-perl
    - libdbd-mysql-perl
    - libmoo-perl

- name: "Enable Apache modules"
  apache2_module:
    state: present
    name: "{{ item }}"
  with_items:
    - perl
    - headers
    - version
    - deflate
    - filter
    - proxy
    - proxy_http
    - proxy_wstunnel
  notify: restart_apache2

- name: "Create directory structure"
  file:
    path: "{{ item }}"
    state: directory
  with_items:
    - "{{ otobo_dest }}"

#- name: "Dowload sources from GIT"
#  git:
#    repo: https://github.com/OTRS/otrs.git
#    dest: "/opt/otrs"

- name: "Download sources from OTRS"
  unarchive: 
    src: "{{ otobo_download_url }}"
    dest: "{{ otobo_dest }}"
    extra_opts: [--strip-components=1]
    remote_src: yes

- name: "Create local group otrs for service account otrs user(s)"
  group:
    name: otobo
    state: present

- name: "Create local service account otrs and to security group otrs, www-data"
  user:
    name: otobo
    home: /opt/otobo
    group: otobo
    groups: www-data
    system: yes

- name: "Check Perl modules"
  command: /opt/otobo/bin/otobo.CheckModules.pl -list

- name: "Transfer configuration template"
  template:
    src: "{{ item.src }}" 
    dest: "{{ item.dest }}"
  with_items:
    - { src: 'Config.pm.dist.j2', dest: '/opt/otobo/Kernel/Config.pm' }

#- name: "Set OTRS file permissions"
#  shell: /opt/otrs/bin/otrs.SetPermissions.pl --web-group=www-data

#- name: "Create symlink from {{ otrs_dest }} to /opt/otrs"
#  file:
#    src: /opt/otrs/scripts/apache2-httpd.include.conf
#    dest: /etc/apache2/sites-enabled/otrs.conf
#    state: link

- name: "Configure Apache with and without SSL"
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: root
    group: root
    mode: 0644
  with_items:
    - { src: 'apache2-httpd-vhost-80.include.conf.j2', dest: '/etc/apache2/sites-available/zzz_otobo-80.conf'}
    - { src: 'apache2-httpd-vhost-443.include.conf.j2', dest: '/etc/apache2/sites-available/zzz_otobo-443.conf'}
  notify: restart_apache

- name: "Enable zzz_otobo-80.conf and zzz_otobo-443.conf"
  command: a2ensite rundeck.conf
  with_items:
    - zzz_otobo-80.conf
    - zzz_otobo-443.conf
  notify:
    - restart_apache

- name: "Configure UFW"
  ufw:
    rule: allow
    name: Apache

#- name: "Copy /opt/otrs/var/cron/otrs_daemon.dist to /opt/otrs/var/cron/otrs_daemon"
#  copy:
#    src: /opt/otrs/var/cron/otrs_daemon.dist
#    dest: /opt/otrs/var/cron/otrs_daemon
#    remote_src: yes

#- name: "Start Deamons & Cron"
#  raw: "{{ item }}"
#  with_items:
#    -  sudo su - otrs -c "/opt/otrs/bin/otrs.Daemon.pl start"
#    -  sudo su - otrs -c "/opt/otrs/bin/Cron.sh start"
