---
# Title: OTOBO Ticket system
#
# Authtor: bitfinity-nl
# File: tasks/ubt-2004-amd64-ldap.yml
#
# Description:
#   OTOBO is the new free Open Source ticket system 
#   with strong functionality AND a great look.
#
# Source(s):
#   - https://doc.otobo.org/manual/admin/stable/en/content/users-groups-roles/agents.html
#

- name: "Add LDAP/AD configuration"
  blockinfile:
    path: /opt/otobo/Kernel/Config.pm
    marker: "    #<!-- {mark} ANSIBLE MANAGED BLOCK -->"
    insertafter: ".*#*Self.*{CheckMXRecord} = 0;"
    block: |2

          # -------------------------------------------------------------------------
          # -- Begin: LDAP-AD - Agent - Basic LDAP - Active Directory Auth BACKEND --
          # -------------------------------------------------------------------------
         
          # Authentication module ldap settting.
          $Self->{'AuthModule'} = 'Kernel::System::Auth::LDAP';
          $Self->{'AuthModule::LDAP::Host'} = '{{ otobo_ad_dc }}';
          $Self->{'AuthModule::LDAP::BaseDN'} = '{{ otobo_ad_basedn }}';
          $Self->{'AuthModule::LDAP::UID'} = '{{ otobo_ad_uid }}';

          # Bind DN to LDAP-Active Directory for searching accounts.
          $Self->{'AuthModule::LDAP::SearchUserDN'} = '{{ otobo_ad_searchuserdn }}';
          $Self->{'AuthModule::LDAP::SearchUserPw'} = '{{ otobo_ad_searchuserpw }}';
          
          # Check if the user is allowed to auth in a posixGroup.
          $Self->{'AuthModule::LDAP::GroupDN'} = '{{ otobo_ad_groupdn }}';
          $Self->{'AuthModule::LDAP::AccessAttr'} = 'member';
          $Self->{'AuthModule::LDAP::UserAttr'} = 'DN';

          # Net::LDAP new params (if needed - for more info see perldoc Net::LDAP)
          $Self->{'AuthModule::LDAP::Params'} = {
              port => 389,
              timeout => 120,
              async => 0,
              version => 3,
          };

          # ------------------------------------------------------------------------
          # -- Eind: LDAP-AD - Agent - Basic LDAP - Active Directory Auth BACKEND --
          # ------------------------------------------------------------------------
          

          # ------------------------------------------------------------------------------------
          # -- Begin: LDAP-AD - Agent - Sync LDAP - Active Directory DB with OTOBO DB BACKEND --
          # ------------------------------------------------------------------------------------
         
          # Authentication module ldap settting.
          $Self->{'AuthSyncModule'} = 'Kernel::System::Auth::Sync::LDAP';
          $Self->{'AuthSyncModule::LDAP::Host'} = '{{ otobo_ad_dc }}';
          $Self->{'AuthSyncModule::LDAP::BaseDN'} = '{{ otobo_ad_basedn }}';
          $Self->{'AuthSyncModule::LDAP::UID'} = '{{ otobo_ad_uid }}';
          
          # Bind DN to LDAP-Active Directory for searching accounts.
          $Self->{'AuthSyncModule::LDAP::SearchUserDN'} = '{{ otobo_ad_searchuserdn }}';
          $Self->{'AuthSyncModule::LDAP::SearchUserPw'} = '{{ otobo_ad_searchuserpw }}';

          $Self->{'AuthSyncModule::LDAP::UserSyncMap'} = {
              UserFirstname => 'givenName',
              UserLastname  => 'sn',
              UserEmail     => 'mail',
          };

          # AuthSyncModule::LDAP::UserSyncInitialGroups
          # (sync following group with rw permission after initial create of first agent
          # login)
          $Self->{'AuthSyncModule::LDAP::UserSyncInitialGroups'} = [
              'users',
          ];
          
          # ----------------------------------------------------------------------------------
          # -- End: LDAP-AD - Agent - Sync LDAP - Active Directory DB with OTOBO DB BACKEND --
          # ----------------------------------------------------------------------------------


          # ---------------------------------------------------------------------------------------
          # -- Begin: LDAP-AD - Customer - Sync LDAP - Active Directory DB with OTOBO DB BACKEND --
          # ---------------------------------------------------------------------------------------

          # (customer user ldap backend and settings)
          $Self->{CustomerUser1} = {
              Name => 'LDAP Data Source',
              Module => 'Kernel::System::CustomerUser::LDAP',
              Params => {
                   # Authentication module ldap settting.
                   Host => '{{ otobo_ad_dc }}',
                   BaseDN => '{{ otobo_ad_basedn }}',                  
                   SSCOPE => 'sub',
                   # Bind DN to LDAP-Active Directory for searching accounts.
                   UserDN => '{{ otobo_ad_searchuserdn }}',
                   UserPw => '{{ otobo_ad_searchuserpw }}',
                   SourceCharset => 'utf-8',
                   DestCharset   => 'utf-8',

                   # Net::LDAP new params (if needed - for more info see perldoc Net::LDAP)
                   Params => {
                        port => 3268,
                        timeout => 120,
                        async => 0,
                        version => 3,
                   },
               },
               ReadOnly => 1,
               CustomerKey => 'sAMAccountName',
               # Customer Settings.
               CustomerID => 'mail',
               CustomerUserListFields => ['cn', 'mail'],
               CustomerUserSearchFields => ['cn', 'givenname', 'mail'],
               CustomerUserSearchPrefix => '',
               CustomerUserSearchSuffix => '*',
               CustomerUserSearchListLimit => 250,
               CustomerUserPostMasterSearchFields => ['mail'],
               CustomerUserNameFields => ['givenname', 'sn'],
               # show not own tickets in customer panel, CompanyTickets
               CustomerUserExcludePrimaryCustomerID => 0,
               AdminSetPreferences => 0,
               CacheTTL => 120,
               Map => [
                   # note: Login, Email and CustomerID are mandatory!
                   # if you need additional attributes from AD, just map them here.
                   # var, frontend, storage, shown (1=always,2=lite), required, storage-type, http-link, readonly
                   [ 'UserFirstname',  'Firstname',  'givenname',                  1, 1, 'var', '', 0 ],
                   [ 'UserLastname',   'Lastname',   'sn',                         1, 1, 'var', '', 0 ],
                   [ 'UserLogin',      'Username',   'sAMAccountName',             1, 1, 'var', '', 0 ],
                   [ 'UserEmail',      'Email',      'mail',                       1, 1, 'var', '', 0 ],
                   [ 'UserCustomerID', 'CustomerID', 'department',                 0, 1, 'var', '', 0 ],
                   [ 'UserPhone',      'Phone',      'telephoneNumber',            1, 0, 'var', '', 0 ],
                   [ 'UserMobile',     'Mobile',     'mobile',                     1, 0, 'var', '', 0 ],
                   [ 'UserRoom',       'Room',       'physicalDeliveryOfficeName', 1, 0, 'var', '', 0 ],
                   [ 'Department',     'Department', 'department',                 1, 0, 'var', '', 0 ],
               ],
          };

          # -------------------------------------------------------------------------------------
          # -- End: LDAP-AD - Customer - Sync LDAP - Active Directory DB with OTOBO DB BACKEND --
          # -------------------------------------------------------------------------------------


          # --------------------------------------------------------
          # -- Begin: MariaDB - Customer - OTOBO Database BACKEND --
          # --------------------------------------------------------

          # 2. Customer user backend: DB
          $Self->{CustomerUser2} = {
              Name => 'Customer Database',
              Module => 'Kernel::System::CustomerUser::DB',
              Params => {
                  Table => 'customer_user',
              },
              # customer unique id
              CustomerKey => 'login',
              # customer #
              CustomerID => 'customer_id',
              CustomerValid => 'valid_id',
              CustomerUserListFields => ['first_name', 'last_name', 'email'],
              CustomerUserSearchFields => ['login', 'last_name', 'customer_id'],
              CustomerUserSearchPrefix => '',
              CustomerUserSearchSuffix => '*',
              CustomerUserSearchListLimit => 250,
              CustomerUserPostMasterSearchFields => ['email'],
              CustomerUserNameFields => ['title','first_name','last_name'],
              CustomerUserEmailUniqCheck => 1,
              Map => [
                  # note: Login, Email and CustomerID needed!
                  # var, frontend, storage, shown (1=always,2=lite), required, storage-type, http-link, readonly, http-link-target
                  [ 'UserTitle',      'Title',      'title',        1, 0, 'var', '', 0 ],
                  [ 'UserFirstname',  'Firstname',  'first_name',   1, 1, 'var', '', 0 ],
                  [ 'UserLastname',   'Lastname',   'last_name',    1, 1, 'var', '', 0 ],
                  [ 'UserLogin',      'Username',   'login',        1, 1, 'var', '', 0 ],
                  [ 'UserPassword',   'Password',   'pw',           0, 0, 'var', '', 0 ],
                  [ 'UserEmail',      'Email',      'email',        1, 1, 'var', '', 0 ],
                  [ 'UserCustomerID', 'CustomerID', 'customer_id',  0, 1, 'var', '', 0 ],
                  [ 'UserPhone',      'Phone',      'phone',        1, 0, 'var', '', 0 ],
                  [ 'UserFax',        'Fax',        'fax',          1, 0, 'var', '', 0 ],
                  [ 'UserMobile',     'Mobile',     'mobile',       1, 0, 'var', '', 0 ],
                  [ 'UserStreet',     'Street',     'street',       1, 0, 'var', '', 0 ],
                  [ 'UserZip',        'Zip',        'zip',          1, 0, 'var', '', 0 ],
                  [ 'UserCity',       'City',       'city',         1, 0, 'var', '', 0 ],
                  [ 'UserCountry',    'Country',    'country',      1, 0, 'var', '', 0 ],
                  [ 'UserComment',    'Comment',    'comments',     1, 0, 'var', '', 0 ],
                  [ 'ValidID',        'Valid',      'valid_id',     0, 1, 'int', '', 0 ],
              ],
              # default selections
              Selections => {
                  UserTitle => {
                      'Mr.' => 'Mr.',
                      'Mrs.' => 'Mrs.',
                  },
              },
          };

          # -------------------------------------------------------
          # -- End: MariaDB - Customer - OTOBO Database BACKEND --
          # -------------------------------------------------------


- name: "Add LDAP Active Directory administrative user to otobo"
  raw: sudo su - otobo -c "/opt/otobo/bin/otobo.Console.pl Admin::User::Add --user-name {{ otobo_ad_account }} --first-name {{ otobo_ad_firstname }} --last-name {{ otobo_ad_lastname }} --email-address {{ otobo_ad_email }} --quiet"
  ignore_errors: yes

- name: "Add agent adm_otobo to group admin/stats/users with rw permissions"
  raw: sudo su - otobo -c "/opt/otobo/bin/otobo.Console.pl Admin::Group::UserLink --user-name {{ otobo_ad_account }} --group-name {{ item }} --permission rw"
  with_items:
    - admin
    - stats
    - users
